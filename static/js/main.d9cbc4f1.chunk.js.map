{"version":3,"sources":["components/events-dummy-data.js","components/events-calendar/index.js","components/form/validation.js","components/form/index.js","components/all-events/index.js","components/event/index.js","views/events/index.js","App.js","serviceWorker.js","index.js"],"names":["eventsDummyData","title","photoUrl","owner","date","start","end","location","description","EventsCalendar","props","dates","theme","selectedDays","jalali","numberOfMonths","numberOfSelectableDays","disabledDays","disabledBeforToday","disabled","yupEventObj","Yup","max","min","required","matches","RegisterForm","allEventsStateHandler","dialog","document","querySelector","formik","useFormik","initialValues","validationSchema","onSubmit","values","console","log","newEvent","push","close","class","className","autoComplete","handleSubmit","touched","errors","name","getFieldProps","type","onClick","AllEvents","state","eventsData","stateHandler","forceUpdate","renderTable","forEach","eachEvent","map","event","index","renderAddForm","changeModalState","showModal","renderCalendar","this","Component","Event","singleEventIndex","repeat","style","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","Events","activePage","setState","placeholder","src","alt","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d9cbc4f1.chunk.js","sourcesContent":["const eventsDummyData = [\n    {\n        title: \"Save A Child Concert\",\n        photoUrl: \"https://i.ytimg.com/vi/uUozqDPFM2A/maxresdefault.jpg\",\n        owner:  \"Rani & Mark\",\n        date:   \"2020-03-01\",\n        start:  \"11 am\",\n        end:    \"8 pm\",\n        location:   \"carnivore\",\n        description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n    },\n    {\n        title: \"Concours d' elegance\",\n        photoUrl: \"https://www.standardmedia.co.ke/images/monday/hqjohm8adm23hg5d91c7ddde9f6.jpg\",\n        owner:  \"CBA Bank\",\n        date:   \"2020-03-06\",\n        start:  \"3 pm\",\n        end:    \"12 pm\", \n        location:   \"race coarse\",\n        description: \"The CBA Africa Concours dâ€™Elegance, organised by the Alfa Romeo Owners Club and open to all makes of cars and motorcycles, is the classiest event on the Kenya Motor Sports Federation calendar and is attended by over 10,000 people.The event is also a social occasion and fun filled family day. The centre piece is the judging of 70 classic and vintage cars and 40 motorcycles under regulations approved by the Kenya Motor Sport Federation\"\n    },\n    {\n        title: \"Save A Child Concert\",\n        photoUrl: \"https://i.ytimg.com/vi/uUozqDPFM2A/maxresdefault.jpg\",\n        owner:  \"Rani & Mark\",\n        date:   \"2020-03-15\",\n        start:  \"11 am\",\n        end:    \"8 pm\",\n        location:   \"carnivore\",\n        description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n    },\n    {\n        title: \"Concours d' elegance\",\n        photoUrl: \"https://www.standardmedia.co.ke/images/monday/hqjohm8adm23hg5d91c7ddde9f6.jpg\",\n        owner:  \"CBA Bank\",\n        date:   \"2020-03-19\",\n        start:  \"3 pm\",\n        end:    \"12 pm\", \n        location:   \"race coarse\",\n        description: \"The CBA Africa Concours dâ€™Elegance, organised by the Alfa Romeo Owners Club and open to all makes of cars and motorcycles, is the classiest event on the Kenya Motor Sports Federation calendar and is attended by over 10,000 people.The event is also a social occasion and fun filled family day. The centre piece is the judging of 70 classic and vintage cars and 40 motorcycles under regulations approved by the Kenya Motor Sport Federation\"\n    },\n    {\n        title: \"Save A Child Concert\",\n        photoUrl: \"https://i.ytimg.com/vi/uUozqDPFM2A/maxresdefault.jpg\",\n        owner:  \"Rani & Mark\",\n        date:   \"2020-03-21\",\n        start:  \"11 am\",\n        end:    \"8 pm\",\n        location:   \"carnivore\",\n        description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n    }];\n\nexport default eventsDummyData;","import React from 'react';\nimport { DatePicker, theme } from 'react-trip-date';\nimport {ThemeProvider} from 'styled-components';\n\n\nconst EventsCalendar = (props) => {\n    const {dates} = props;\n    return (\n        <ThemeProvider theme={theme}>\n            <DatePicker\n            selectedDays={dates} //initial selected days\n            jalali={false}\n            numberOfMonths={1}\n            numberOfSelectableDays={0} // number of days you need \n            disabledDays={['2019-12-02']} //disabeld days\n            disabledBeforToday={false} \n            disabled={true} // disable calendar \n            />\n      </ThemeProvider>\n    )\n}\n\nexport default EventsCalendar;","import * as Yup from 'yup';\n\n\nexport const yupEventObj = Yup.object({\n    title: Yup.string()\n        .max(20, '* Must be 15 characters or less')\n        .min(3, '* Must be more than 3 characters')\n        .required('* Required'),\n    owner: Yup.string()\n        .max(10, '* Must be 10 characters or less')\n        .min(3, '* Must be more than 3 characters')\n        .required('* Required'),\n    date: Yup.string()\n        .matches(/^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$/, '* date format should be YYYY-MM-DD')\n        .required('* Required'),\n    start: Yup.string()\n        .max(5, '* Must be 5 characters or less')\n        .required('* Required'),\n    end: Yup.string()\n        .max(5, '* Must be 5 characters or less')\n        .required('* Required'),\n    location: Yup.string()\n        .max(13, '* Must be 13 characters or less')\n        .min(3, '* Must be more than 3 characters')\n        .required('* Required'),\n    description: Yup.string()\n        .min(50, '* must be more than 50 characters')\n        .required('* Required'),\n    photoUrl: Yup.string()\n        .required('* Required'),\n    })\n","import React from 'react';\nimport { useFormik } from 'formik';\n\nimport { yupEventObj } from './validation';\nimport eventsDummyData from './../../components/events-dummy-data';\nimport './index.scss';\n\nconst RegisterForm = (props) => {\n    const { allEventsStateHandler } = props;\n    var dialog = document.querySelector('dialog');\n\n    const formik = useFormik({\n            initialValues: {\n            title: '',\n            owner: '',\n            date: '',\n            start: '',\n            end: '',\n            location: '',\n            description: '',\n            photoUrl: '',\n            },\n            validationSchema: yupEventObj,\n            onSubmit: values => {\n                const {initialValues, title, owner, date, start, end, location, description, photoUrl} = values;\n                console.log('formsub')\n                // alert(JSON.stringify(values, null, 2));\n                const newEvent = {\n                    initialValues,\n                    title,\n                    owner,\n                    date,\n                    start,\n                    end,\n                    location,\n                    description,\n                    photoUrl\n                }\n                eventsDummyData.push(newEvent)\n                allEventsStateHandler();\n                dialog.close();\n            },\n        });\n\n    return(\n        <dialog class=\"mdl-dialog\">\n            <h6 class=\"mdl-dialog__title\">Add New Event</h6>\n            <div class=\"mdl-dialog__content\"></div>\n                    <form className=\"form\" autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n\n                            <div className=\"input-container\">\n                                <div className=\"input-label\">\n                                    <div className=\"input-label\">\n                                <span >title</span>\n                                    {formik.touched.title && formik.errors.title ? \n                                        <span className=\"error-span\">{formik.errors.title}</span>\n                                    : null}\n                                </div>\n                                </div>\n                                <input name=\"title\" {...formik.getFieldProps('title')}>\n                                </input>\n                            </div>\n\n                            <div className=\"input-container\">\n                                <div className=\"input-label\">\n                                    <span >owner</span>\n                                    {formik.touched.owner && formik.errors.owner ? \n                                        <span className=\"error-span\">{formik.errors.owner}</span>\n                                    : null}\n                                </div>\n                                <input name=\"owner\" {...formik.getFieldProps('owner')} > \n                                </input>\n                            </div>\n                            \n                            <div className=\"input-container\">\n                                <div className=\"input-label\">\n                                    <span >description</span>\n                                    {formik.touched.description && formik.errors.description ? \n                                        <span className=\"error-span\">{formik.errors.description}</span>\n                                    : null}\n                                </div>\n                                <input name=\"description\" {...formik.getFieldProps('description')}>\n                                </input>\n                            </div>  \n\n                            <div className=\"input-container\">\n                                <div className=\"input-label\">\n                                <span >date</span>\n                                    {formik.touched.date && formik.errors.date ? \n                                        <span className=\"error-span\">{formik.errors.date}</span>\n                                    : null}\n                                </div>\n                                <input name=\"date\" {...formik.getFieldProps('date')} >\n                                </input>\n                            </div>                 \n\n                            <div className=\"input-container\">\n                                <div className=\"input-label\">\n                                <span >start</span>\n                                    {formik.touched.start && formik.errors.start ? \n                                        <span className=\"error-span\">{formik.errors.start}</span>\n                                    : null}\n                                </div>\n                                <input name=\"start\" {...formik.getFieldProps('start')}>\n                                </input>\n                            </div>\n\n                            <div className=\"input-container\">\n                                <div className=\"input-label\">\n                                    <div className=\"input-label\">\n                                <span >end</span>\n                                    {formik.touched.end && formik.errors.end ? \n                                        <span className=\"error-span\">{formik.errors.end}</span>\n                                    : null}\n                                </div>\n                                </div>\n                                <input name=\"end\" {...formik.getFieldProps('end')}>\n                                </input>\n                            </div>                \n\n                            <div className=\"input-container\">\n                            <div className=\"input-label\">\n                                <div className=\"input-label\">\n                                <span >location</span>\n                                    {formik.touched.location && formik.errors.location ? \n                                        <span className=\"error-span\">{formik.errors.location}</span>\n                                    : null}\n                                </div>\n                            </div>\n                            <input name=\"location\" {...formik.getFieldProps('location')}>\n                            </input>\n                        </div>    \n\n                        <div className=\"input-container\">\n                            <div className=\"input-label\">\n                                <div className=\"input-label\">\n                                <span >photoUrl</span>\n                                    {formik.touched.photoUrl && formik.errors.photoUrl ? \n                                        <span className=\"error-span\">{formik.errors.photoUrl}</span>\n                                    : null}\n                                </div>\n                            </div>\n                            <input name=\"photoUrl\" {...formik.getFieldProps('photoUrl')}>\n                            </input>\n                        </div>    \n                        <div class=\"dialog-actions\">\n                            <button type=\"button\" className=\"close\" onClick={() => dialog.close()}>CANCEL</button>\n                            <button type=\"submit\" >ADD EVENT</button>\n                        </div>\n                    </form>\n            \n    </dialog>\n    );\n}\n\nexport default RegisterForm;","import React, { Component } from 'react';\n\nimport eventsDummyData from './../events-dummy-data';\nimport EventsCalendar from './../../components/events-calendar';\nimport AddForm from './../form';\nimport './index.scss';\n\nexport default class AllEvents extends Component {\n\n    state = {\n        eventsData: eventsDummyData,\n    }\n    stateHandler = this.props.stateHandler;\n    dates = [];\n\n    allEventsStateHandler = () => {\n        this.forceUpdate();\n    }\n\n    renderTable = () => {\n        const {eventsData} = this.state;\n        eventsData.forEach((eachEvent) => {\n            this.dates.push(eachEvent.date);\n        });\n        return (\n            <div className=\"table-section\">\n                <div className=\"section-title\">\n                    All Events\n                </div>\n                <div className=\"table-div\">\n                    <table className=\"mdl-data-table mdl-js-data-table\">\n                    <thead>\n                        <tr>\n                            <th></th>\n                            <th className=\"mdl-data-table__cell--non-numeric\">Title</th>\n                            <th className=\"mdl-data-table__cell--non-numeric\">Owner</th>\n                            <th className=\"mdl-data-table__cell--non-numeric\">Date</th>\n                            <th className=\"mdl-data-table__cell--non-numeric\">Start</th>\n                            <th className=\"mdl-data-table__cell--non-numeric\">End</th>\n                            <th className=\"mdl-data-table__cell--non-numeric\">Location</th>\n                            <th className=\"mdl-data-table__cell--non-numeric\"></th>\n                            <th className=\"mdl-data-table__cell--non-numeric\"></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {eventsData.map(\n                            (event, index) => (\n                                <tr>\n                                    <td >{index + 1}.</td>\n                                    <td className=\"mdl-data-table__cell--non-numeric\">{event.title}</td>\n                                    <td className=\"mdl-data-table__cell--non-numeric\">{event.owner}</td>\n                                    <td className=\"mdl-data-table__cell--non-numeric\">{event.date}</td>\n                                    <td className=\"mdl-data-table__cell--non-numeric\">{event.start}</td>\n                                    <td className=\"mdl-data-table__cell--non-numeric\">{event.end}</td>\n                                    <td className=\"mdl-data-table__cell--non-numeric\">{event.location}</td>\n                                    <td className=\"mdl-data-table__cell--non-numeric\"><span className=\"trash\"><i class=\"fas fa-trash-alt\"></i></span></td>\n                                    <td className=\"mdl-data-table__cell--non-numeric\"><span className=\"more-link\" onClick={() => this.stateHandler(index, \"singleEvent\")}>more</span></td>\n                                </tr>\n                            )\n                        )}\n                    </tbody>\n                    </table>\n                </div>\n                <div className=\"action-button-section\">\n                    {this.renderAddForm()}\n                    <button onClick={this.changeModalState }>\n                        ADD NEW EVENT\n                    </button>\n                </div>\n            </div>\n        );\n    }\n\n    changeModalState = () => {\n        var dialog = document.querySelector('dialog');\n        dialog.showModal();\n    }\n\n    renderAddForm = () => {\n        return( \n                <AddForm allEventsStateHandler={this.allEventsStateHandler}/>\n        );\n    }\n\n    renderCalendar = () => {\n        return (\n            <div className=\"calendar-section\">\n                <div class=\"section-title\">\n                    Events Calendar\n                    <EventsCalendar dates={this.dates}/>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return(\n            <div className=\"all-events\">\n                {this.renderTable()}\n                {this.renderCalendar()}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nimport './index.scss';\nimport eventsDummyData from './../events-dummy-data';\n\nexport default class Event extends Component {\n\n    render() {\n\n        const {singleEventIndex, stateHandler} = this.props;\n        console.log('*++after func runs'.repeat(7), eventsDummyData[singleEventIndex].description);\n\n        return(\n            <div className=\"single-event-page\">\n                <div className=\"main-section\">\n                        <div className=\"link-section\">\n                            <div className=\"link-section\">\n                                <span className=\"link-span\" onClick={() => stateHandler(\"allEvents\")}>\n                                    <i class=\"fas fa-arrow-left\"></i> \n                                    Back\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"carousel-section\"  style={{\n                                backgroundImage: `url(${eventsDummyData[singleEventIndex].photoUrl})`,\n                                backgroundRepeat: 'no-repeat',\n                                backgroundSize: 'cover',\n                                backgroundPosition: 'center'\n                            }}>\n                        </div>\n                        <div className=\"main-content-section\">\n                            <div className=\"event-title\">\n                                {eventsDummyData[singleEventIndex].title}\n                            </div>\n                            <div className=\"event-description\">\n                                {eventsDummyData[singleEventIndex].description}\n                            </div>\n                            <div className=\"action-section\">\n                                <button>GET A TICKET</button>\n                            </div>\n                        </div>\n                </div>\n                <div className=\"details-section\">\n                    <div className=\"details-article\">\n                        <div className=\"title-sect\">\n                            <h6>Event Details</h6>\n                        </div>\n                        <div className=\"details-sect\">\n                            <div className=\"detail-wrapper\">\n                                <div className=\"detail-type\">owner:</div>\n                                <div className=\"detail-value\">{eventsDummyData[singleEventIndex].owner}</div>\n                            </div>\n                            <div className=\"detail-wrapper\">\n                                <div className=\"detail-type\">location:</div>\n                                <div className=\"detail-value\">{eventsDummyData[singleEventIndex].location}</div>\n                            </div>\n                            <div className=\"detail-wrapper\">\n                                <div className=\"detail-type\">date:</div>\n                                <div className=\"detail-value\">{eventsDummyData[singleEventIndex].date}</div>\n                            </div>\n                            <div className=\"detail-wrapper\">\n                                <div className=\"detail-type\">start:</div>\n                                <div className=\"detail-value\">{eventsDummyData[singleEventIndex].start}</div>\n                            </div>\n                            <div className=\"detail-wrapper\">\n                                <div className=\"detail-type\">end:</div>\n                                <div className=\"detail-value\">{eventsDummyData[singleEventIndex].end}</div>\n                            </div>\n                        </div>\n                        <div className=\"attendees-sect\">confirmed attendees</div>\n                        <div className=\"buttons-sect\">\n                            <button>SEND INVITE</button>\n                            <button>SHARE</button>\n                        </div>\n                    </div>\n                    <div className=\"comments-article\">\n                        <div className=\"comments-title\">comments</div>\n                        <div className=\"comment\">\n                            <div className=\"comment-body\">This events are usually lit !!!!</div>\n                            <div className=\"comment-owner\">- joe black</div>\n                        </div>\n                        <div className=\"comment\">\n                            <div className=\"comment-body\">This events are usually lit !!!!</div>\n                            <div className=\"comment-owner\">- joe black</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport AllEvents from './../../components/all-events';\nimport Event from './../../components/event';\nimport './index.scss';\n\nexport default class Events extends Component {\n    state = {\n        singleEventIndex: null,\n    }\n\n    stateHandler = (singleEventIndex=null, activePage) => {\n            this.setState(() => ({singleEventIndex, activePage: activePage, }));\n    }\n\n    render() {\n        const { activePage, singleEventIndex } = this.state;\n        return(\n            <div className=\"mdl-layout mdl-js-layout  mdl-layout--fixed-header\">\n                <header className=\"mdl-layout__header\">\n                    <div className=\"mdl-layout__header-row\">\n                    <span className=\"mdl-layout-title\">FLY EVENTS</span>\n                    <div className=\"mdl-layout-spacer\"></div>\n                        <div className=\"search-bar\">\n                            <input className=\"search-input\" placeholder=\"search\"/>\n                            <div className=\"search-icon\">\n                                <i class=\"fas fa-search\"></i>\n                            </div>\n                        </div>\n                    <div className=\"mdl-layout-spacer\"></div>\n                        <div className=\"avatar\">\n                            <img src=\"https://i.pinimg.com/originals/13/03/69/130369231ecba23d5e0e1230d015fb6e.jpg\" alt=\"avatar\"></img>\n                        </div>\n                    </div>\n                </header>\n                <div className=\"mdl-layout__drawer\">\n                    <nav className=\"mdl-navigation\">\n                        <div className=\"nav-item\">Home</div>\n                        <div className=\"nav-item nav-item-active\">Events</div>\n                    </nav>\n                    <div className=\"logout-btn\">logout</div>\n                </div>\n                <main className=\"mdl-layout__content\">\n                    <div className=\"page-content\">\n                        {\n                            activePage === \"singleEvent\" ? \n                                <Event stateHandler={this.stateHandler} singleEventIndex={singleEventIndex}/> \n                                    : \n                                <AllEvents stateHandler={this.stateHandler} singleEventIndex={singleEventIndex} />\n                        }\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport Events from './views/events';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Events />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}